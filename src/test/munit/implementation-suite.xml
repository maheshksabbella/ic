<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:munit="http://www.mulesoft.org/schema/mule/munit" xmlns:munit-tools="http://www.mulesoft.org/schema/mule/munit-tools"
	xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xsi:schemaLocation="
		http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
		http://www.mulesoft.org/schema/mule/munit http://www.mulesoft.org/schema/mule/munit/current/mule-munit.xsd
		http://www.mulesoft.org/schema/mule/munit-tools  http://www.mulesoft.org/schema/mule/munit-tools/current/mule-munit-tools.xsd">
	<munit:config name="implementation-suite.xml" />
	<munit:test name="getaccounts-test" doc:id="1e44d3c7-eb91-4d2d-a04f-89cb3287c2bf" >
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock To Retrive All Account" doc:id="b88f78f4-d515-48e2-a72c-196afc3f430a" processor="salesforce:query-all">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="9ea1e434-2864-4284-ad57-fd8a0f9ab4e6" attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value="#[output application/java  --- readUrl('classpath://getaccountstest\mock_payload.dwl')]" mediaType="application/java " encoding="UTF-8" />
					<munit-tools:variables >
						<munit-tools:variable key="outboundHeaders" value="#[readUrl('classpath://getaccountstest\mock_variable_.dwl')]" />
					</munit-tools:variables>
				</munit-tools:then-return>
			</munit-tools:mock-when>
			<munit:set-event doc:name="Set Input" doc:id="f0b30970-60eb-4d0e-8068-7ac67e30c828" >
				<munit:payload value="#[readUrl('classpath://getaccountstest\set-event_payload.dwl')]" encoding="UTF-8" />
				<munit:attributes value="#[readUrl('classpath://getaccountstest\set-event_attributes.dwl')]" />
				<munit:variables >
					<munit:variable key="outboundHeaders" value="#[readUrl('classpath://getaccountstest\set-event_variable_.dwl')]" />
				</munit:variables>
			</munit:set-event>
		</munit:behavior>
		<munit:execution >
			<flow-ref doc:name="Flow-ref to getaccounts" doc:id="d1d21dff-424b-4065-a2c0-7c845beb3cde" name="getaccounts"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert doc:name="Assert payload" doc:id="f719da80-ed75-4914-a194-f120dc7d5778" message="The payload does not match">
				<munit-tools:that ><![CDATA[#[%dw 2.0
import getaccountstest::assert_expression_payload
---
assert_expression_payload::main({payload: payload, attributes: attributes, vars: vars})]]]></munit-tools:that>
			</munit-tools:assert>
		</munit:validation>
	</munit:test>
	<munit:test name="updateaccount-test" doc:id="6bf0414c-5ec2-4cc3-8341-13d2cd45cb18" >
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock To Modify Existing AccountBy Id" doc:id="d0cee321-77d5-45bc-ba6c-5ff5ed29881e" processor="salesforce:update">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="28bc1cd9-ac52-4412-a72b-023027fe29a7" attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value="#[output application/java  --- readUrl('classpath://updateaccounttest\mock_payload.dwl')]" mediaType="application/java " encoding="UTF-8" />
					<munit-tools:variables >
						<munit-tools:variable key="outboundHeaders" value="#[readUrl('classpath://updateaccounttest\mock_variable_.dwl')]" />
						<munit-tools:variable key="id" value="#[output application/java --- readUrl('classpath://updateaccounttest\mock_variable_1.dwl')]" mediaType="application/java" encoding="UTF-8" />
					</munit-tools:variables>
				</munit-tools:then-return>
			</munit-tools:mock-when>
			<munit:set-event doc:name="Set Input" doc:id="d6a61f79-673d-41d5-85ad-f1416c187f69" >
				<munit:payload value="#[output application/json  --- readUrl('classpath://updateaccounttest\set-event_payload.dwl')]" encoding="UTF-8" mediaType="application/json " />
				<munit:attributes value="#[readUrl('classpath://updateaccounttest\set-event_attributes.dwl')]" />
				<munit:variables >
					<munit:variable key="outboundHeaders" value="#[readUrl('classpath://updateaccounttest\set-event_variable_.dwl')]" />
					<munit:variable key="id" value="#[output application/java --- readUrl('classpath://updateaccounttest\set-event_variable_1.dwl')]" encoding="UTF-8" mediaType="application/java" />
				</munit:variables>
			</munit:set-event>
		</munit:behavior>
		<munit:execution >
			<flow-ref doc:name="Flow-ref to updateaccount" doc:id="ba29a2e4-efda-482f-9ad5-c2040d2cb5f1" name="updateaccount"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert doc:name="Assert payload" doc:id="aa472ef4-5f47-4087-b3e9-c39c82fdee59" message="The payload does not match">
				<munit-tools:that ><![CDATA[#[%dw 2.0
import updateaccounttest::assert_expression_payload
---
assert_expression_payload::main({payload: payload, attributes: attributes, vars: vars})]]]></munit-tools:that>
			</munit-tools:assert>
		</munit:validation>
	</munit:test>


</mule>
